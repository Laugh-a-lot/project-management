generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-1.0.x"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Priority {
  low
  medium
  high
}

model Task {
  id             Int      @id @default(autoincrement())
  title          String
  description    String
  due_date       DateTime
  priority       Priority   @default(medium) 
  tags           String[]
  assigned_to    User[]   @relation(name: "assigned_to")
  assigned_to_id   String[]
  created_by     User     @relation(name: "created_by", fields: [created_by_id], references: [id])
  created_by_id  String
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  @@index([title])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id         String    @id @default(cuid())
  name       String    @default("")
  email      String    @unique
  image      String?   @default("")
  password   String
  created_at DateTime  @default(now())
  accounts   Account[]
  sessions   Session[]
  tasks      Task[]    @relation(name: "created_by")
  assigned   Task[]    @relation(name: "assigned_to")

  @@unique([id, email])
}
